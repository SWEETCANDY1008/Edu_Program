<div id="in_section_compiler">
    <div id="sec_1" >
        <div id="editor"># 여기에 코드를 작성하세요.
<%- code %></div>
    </div>
	<div id="buttons">
        <input id='check' type='button' value='CHECK' onclick="submit_boardsize();">
        <input id='remove' type='button' value='remove' onclick="stop()">
    </div>
    
    <script>
        make_editor();
   </script>
    <div id="sec_2">
        <div>
            <script src="/js/two.js"></script>
            <script src="/js/Board/Board.js"></script>
            <script src="/js/Board/Mine_Board.js"></script>
            <script src="/js/Board/Player_Board.js"></script>
            <div id="c" style="width: 640px; height:640px;"></div>
            <script>
                // 파이썬 변수를 자바스크립트 변수로

                var delete_board = true;

                function game(row, col, mine) {
                    if(delete_board === true) {
                        game_start(row, col, mine);
                        delete_board = false;
                    } else if(delete_board === false) {
                        var svg = document.getElementById("c").querySelector("svg");
                        svg.remove();
                        game_start(row, col, mine);
                    }
                }               
                                           
                function game_start(row, col, mine) {
                    // 게임판의 행 또는 열의 크기
                    var size = 30;
                    var row_ = row;
                    var col_ = col;
                    var mine_ = mine;

                    // 객체 생성
                    var	mineB = new Mine_Board(row_, col_, mine_);
                    var	playerB = new Player_Board(row_, col_, mine_);

                    var game_over = false;
                    var window_row, window_col = 0;

                    // 초기 게임 windows 구성
                    var initGrid = function(x, y) {
                        window_row = x;
                        window_col = y;
                    }

                    // var init = function(x, y) {
                    // 	initGrid(x, y);
                    // }

                    initGrid(row_, col_);

                    // 지뢰판이 그려지는 부분의 id값을 불러옴
                    var c = document.getElementById("c");

                    // 기존 마우스 이벤트 제거
                    c.addEventListener('contextmenu', function() {
                        event.preventDefault();
                    });

                    // 현재는 게임판만 나타나게 하려고 함 -> 게임제작 완료
                    var two = new Two({
                        fullscreen: false,
                        autostart: false,
                        width: window_row * size,
                        height: window_col * size
                        }).appendTo(c);

                    // 각각 텍스쳐 별로 미리 특정 변수에 대입(불러오기)
                    var mine = new Array(window_row);
                    for(i=0;i<12;i++) {
                        mine[i] = new Two.Texture('../lib/mine_images/' + i + '.jpg');
                    }

                    // 모든 셀에 대해 two.makeRectangle 했을 때 fill을 위해서 board 크기와 동일한 배열을 생성
                    var rect = new Array(window_row);
                    for (i=0;i<window_row;i++){
                        rect[i] = new Array(window_col);
                    }

                    // 게임판 생성, 모두 닫혀있는 텍스쳐가 나타남
                    for(var i=0;i<window_row;i++) {
                        for(var j=0;j<window_col;j++) {
                            if (playerB.get_cell(i, j) === 9) {
                                playerB.open(i, j, mineB);
                            }
                            rect[i][j] = two.makeRectangle(size / 2 + i * size, size / 2 + j * size, size, size);
                            rect[i][j].fill = mine[10];
                        }
                    }

                    // 게임이 끝나는지 계속 판단
                    two.bind('update', function() {
                        // 반복할 함수				
                        if(game_over === true){
                            two.unbind('update');
                            alert("GAME OVER");
                        } else if(delete_board === true) {
                            two.unbind('update');
                        }
                        game_over = playerB.gameover;
                    }).play();
                }              

            </script>
         </div>
    </div>
</div>